AWSTemplateFormatVersion: "2010-09-09"
Description: "Creates a VPC and subnets."
Resources:
  esuranceVPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: "10.1.0.0/16"
      Tags:
        - Key: "Name"
          Value: "esuranceVPC"
        - Key: "Template"
          Value: "network.yaml"
  esuranceSubnetA:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.1.1.0/24"
      AvailabilityZone: "us-east-1a"
      VpcId:
        Ref: esuranceVPC
      Tags:
        - Key: "Name"
          Value: "esuranceSubnetA"
        - Key: "Template"
          Value: "network.yaml"
  esuranceSubnetC:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.1.3.0/24"
      AvailabilityZone: "us-east-1c"
      VpcId:
        Ref: esuranceVPC
      Tags:
        - Key: "Name"
          Value: "esuranceSubnetC"
        - Key: "Template"
          Value: "network.yaml"
  esuranceSubnetB:
    Type: "AWS::EC2::Subnet"
    Properties:
      CidrBlock: "10.1.2.0/24"
      AvailabilityZone: "us-east-1b"
      VpcId:
        Ref: esuranceVPC
      Tags:
        - Key: "Name"
          Value: "esuranceSubnetB"
        - Key: "Template"
          Value: "network.yaml"
  esuranceInternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: "Name"
          Value: "esuranceInternetGateway"
        - Key: "Template"
          Value: "network.yaml"
  esuranceVPCGatewayAttachment:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties:
      InternetGatewayId:
        Ref: esuranceInternetGateway
      VpcId:
        Ref: esuranceVPC
  esuranceRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties:
      VpcId:
        Ref: esuranceVPC
      Tags:
        - Key: "Name"
          Value: "esuranceRouteTable"
        - Key: "Template"
          Value: "network.yaml"
  esuranceRoute:
    Type: "AWS::EC2::Route"
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId:
        Ref: esuranceInternetGateway
      RouteTableId:
        Ref: esuranceRouteTable
  esuranceSubnetRouteTableAssociationA:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: esuranceRouteTable
      SubnetId:
        Ref: esuranceSubnetA
  esuranceSubnetRouteTableAssociationB:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: esuranceRouteTable
      SubnetId:
        Ref: esuranceSubnetB
  esuranceSubnetRouteTableAssociationC:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties:
      RouteTableId:
        Ref: esuranceRouteTable
      SubnetId:
        Ref: esuranceSubnetC
  esuranceSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Allow SSH inbound"
      VpcId:
        Ref: esuranceVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "22"
          ToPort: "22"
          CidrIp: 0.0.0.0/0
Outputs:
  StackVPC:
    Description: The ID of the VPC
    Value: !Ref esuranceVPC
    Export:
      Name: !Sub "${AWS::StackName}-VpcId"
  StackSG:
    Description: The ID of the security group
    Value: !Ref esuranceSecurityGroup
    Export:
      Name: !Sub "${AWS::StackName}-SecurityGroupId"
  StackSubnetA:
    Description: The ID of Subnet A
    Value: !Ref esuranceSubnetA
    Export:
      Name: !Sub "${AWS::StackName}-SubnetAId"
  StackSubnetB:
    Description: The ID of Subnet B
    Value: !Ref esuranceSubnetB
    Export:
      Name: !Sub "${AWS::StackName}-SubnetBId"
  StackSubnetC:
    Description: The ID of Subnet C
    Value: !Ref esuranceSubnetC
    Export:
      Name: !Sub "${AWS::StackName}-SubnetCId"
